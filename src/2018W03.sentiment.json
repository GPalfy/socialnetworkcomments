{"paragraphs":[{"text":"println(\"Spark version \" + sc.version)\n// println(\"Scala version \" + util.Properties.versionString)\n","user":"anonymous","dateUpdated":"2018-01-19T12:07:25+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Spark version 2.1.0\n"}]},"apps":[],"jobName":"paragraph_1516112393937_-2144235568","id":"20180116-141953_1712217337","dateCreated":"2018-01-16T14:19:53+0000","dateStarted":"2018-01-19T12:07:25+0000","dateFinished":"2018-01-19T12:08:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:24285"},{"text":"// Global variables\nval dir_data = \"data/dev-test-exploratory-analysis\"\nval f_sentipos = dir_data + \"/sentiment_pos_norm\"\nval f_sentineg = dir_data + \"/sentiment_neg_norm\"\nval f_lexemes = dir_data + \"/lexemes_norm/*.csv\"\nval fcomm_clean = dir_data + \"/224564804326967_facebook_comments_clean\"\n// End of Global variables","user":"anonymous","dateUpdated":"2018-01-19T12:07:25+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndir_data: String = data/dev-test-exploratory-analysis\n\nf_sentipos: String = data/dev-test-exploratory-analysis/sentiment_pos_norm\n\nf_sentineg: String = data/dev-test-exploratory-analysis/sentiment_neg_norm\n\nf_lexemes: String = data/dev-test-exploratory-analysis/lexemes_norm/*.csv\n\nfcomm_clean: String = data/dev-test-exploratory-analysis/224564804326967_facebook_comments_clean\n"}]},"apps":[],"jobName":"paragraph_1516112427112_-558254629","id":"20180116-142027_861259828","dateCreated":"2018-01-16T14:20:27+0000","dateStarted":"2018-01-19T12:07:27+0000","dateFinished":"2018-01-19T12:08:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24286"},{"text":"import org.apache.spark.rdd.RDD\n\n// Read sentiment files\nval sentPosDF = sc.textFile(f_sentipos)\nval sentNegDF = sc.textFile(f_sentineg)\n\n// Read lexemes to DataFrame\ncase class Lexeme(lemma: String, pragma: String)\nval lexemesDF = sc.textFile(f_lexemes).map(_.split(\",\")).map(atr => Lexeme(atr(0).trim, atr(1).trim))\n\n// Split lines of comment\nval commentsDF = sc.textFile(fcomm_clean)\nval commentsArrDF : RDD[Array[String]] = commentsDF.map(line => line.split(\"\\\\W\"))\n","user":"anonymous","dateUpdated":"2018-01-19T12:07:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.rdd.RDD\n\nsentPosDF: org.apache.spark.rdd.RDD[String] = data/dev-test-exploratory-analysis/sentiment_pos_norm MapPartitionsRDD[1] at textFile at <console>:34\n\nsentNegDF: org.apache.spark.rdd.RDD[String] = data/dev-test-exploratory-analysis/sentiment_neg_norm MapPartitionsRDD[3] at textFile at <console>:32\n\ndefined class Lexeme\n\nlexemesDF: org.apache.spark.rdd.RDD[Lexeme] = MapPartitionsRDD[7] at map at <console>:34\n\ncommentsDF: org.apache.spark.rdd.RDD[String] = data/dev-test-exploratory-analysis/224564804326967_facebook_comments_clean MapPartitionsRDD[9] at textFile at <console>:34\n\ncommentsArrDF: org.apache.spark.rdd.RDD[Array[String]] = MapPartitionsRDD[10] at map at <console>:34\n"}]},"apps":[],"jobName":"paragraph_1516112459647_1773151851","id":"20180116-142059_1487181971","dateCreated":"2018-01-16T14:20:59+0000","dateStarted":"2018-01-19T12:08:34+0000","dateFinished":"2018-01-19T12:08:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24287"},{"text":"object LookupFun  extends java.io.Serializable {\n  def lemword(word: String, mymap: Map[String,String]): String = {\n      val res : String = mymap.get(word).mkString\n      if (res.isEmpty) word else res\n  }\n  \n  def arrword(arr: Array[String], mymap : Map[String,String]) : Array[String] = {\n      arr.map(word => lemword(word, mymap))\n  }\n}\n","user":"anonymous","dateUpdated":"2018-01-19T12:07:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined object LookupFun\n"}]},"apps":[],"jobName":"paragraph_1516112486159_1726243133","id":"20180116-142126_1876209314","dateCreated":"2018-01-16T14:21:26+0000","dateStarted":"2018-01-19T12:08:35+0000","dateFinished":"2018-01-19T12:08:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24288"},{"text":"println(\"Lexemes\")\nlexemesDF.take(3).foreach(println)\nprintln(\"Postivie sentiments\")\nsentPosDF.take(3).foreach(println)\nprintln(\"Negaivie sentiments\")\nsentNegDF.take(3).foreach(println)","user":"anonymous","dateUpdated":"2018-01-19T12:07:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Lexemes\nLexeme(cajchovat,cajchovat)\nLexeme(cajchovat,cajchujem)\nLexeme(cajchovat,cajchujes)\nPostivie sentiments\nright\nako\nma\nNegaivie sentiments\no\npolozeny\npriemerny\n"}]},"apps":[],"jobName":"paragraph_1516112548720_750812726","id":"20180116-142228_41091334","dateCreated":"2018-01-16T14:22:28+0000","dateStarted":"2018-01-19T12:08:38+0000","dateFinished":"2018-01-19T12:08:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24289"},{"text":"// Lookup table\nval lexemesMap : Map[String,String] = lexemesDF.map(r => (r.pragma, r.lemma)).collect.toMap\n","user":"anonymous","dateUpdated":"2018-01-19T12:07:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lexemesMap: Map[String,String] = Map(tiborov -> tibor, javskou -> javsky, karborundovemu -> karborundovy, startujem -> startovat, nezavrzdiac -> nezavrzdat, spustneme -> spustnut, dahoch -> dah, dzezista -> dzezista, previedol -> previest, brunejskeho -> brunejsky, strukturovanej -> strukturovany, pribudol -> pribudnut, nepofrancuzstite -> nepofrancuzstit, najchybnejsej -> chybny, nefrfocte -> nefrfotat, neprikryvajte -> neprikryvat, niznorepasskej -> niznorepassky, sexualny -> sexualny, clapotaveho -> clapotavy, cudzobaznejsim -> cudzobazny, neflochajuc -> neflochat, nepovarovala -> nepovarovat, hrabskych -> hrabsky, kvestormi -> kvestor, pretvaratelkach -> pretvaratelka, nesnupli -> nesnupnut, demagogicke -> demagogicka, brejkujes -> brejkovat, nefuskarime -> nefuskarit, nezzelie -> n..."}]},"apps":[],"jobName":"paragraph_1516112573231_-100605941","id":"20180116-142253_589994139","dateCreated":"2018-01-16T14:22:53+0000","dateStarted":"2018-01-19T12:08:39+0000","dateFinished":"2018-01-19T12:08:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24290"},{"text":"// Case Calsses (Models)\ncase class SentiProbM(negative: Double, neutral: Double, positive: Double)\ncase class SentiCountM(count: Long, negative: Long, positive: Long)\n\nobject SentiCount  extends java.io.Serializable {\n    // Sentiments set contains words from array\n    def wordsInSentiments (arr_w : Array[String], set_s : Set[String]) : Long = {\n        var cnt : Long = 0\n        arr_w.map{ w => \n            if (set_s.contains(w))\n                cnt = cnt + 1\n        }\n        return cnt\n    }\n}\n\nobject SentiCompute  extends java.io.Serializable {\n    def sentiToProb(C: SentiCountM): SentiProbM = {\n        // return: Array(prob. negative, prob. neutral, prob. positive)\n        val d_cnt: Double = C.count.toDouble\n        val d_neg: Double = C.negative.toDouble\n        val d_pos: Double = C.positive.toDouble\n        val pneg: Double = d_neg/d_cnt    // Probability of negative sentiment\n        val ppos: Double = d_pos/d_cnt    // --\"-- positive sentiment\n        val pneu: Double = (d_cnt - (d_neg + d_pos))/d_cnt // --\"-- neutral sentiment\n        return SentiProbM(pneg, pneu, ppos)\n    }\n    \n    def maxIdx(arr: Array[Double]) : Int = {\n        val result = arr.foldLeft(-1,Double.MinValue,0) {\n            case ((maxIndex, maxValue, currentIndex), currentValue) =>\n                if(currentValue > maxValue) (currentIndex,currentValue,currentIndex+1)\n                else (maxIndex,maxValue,currentIndex+1)\n            }\n        result._1\n    }\n    \n    def sentiLabel(P: SentiProbM) : Int = {\n        if (P.positive == P.negative) {\n             return 0 // Neutral\n        } else {\n            if (P.positive > P.negative) {\n                return 1 // Positive\n            } else {\n                return -1 // Negative   \n            }\n        }\n    }\n}","user":"anonymous","dateUpdated":"2018-05-07T08:50:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class SentiProbM\n\ndefined class SentiCountM\n\ndefined object SentiCount\n\ndefined object SentiCompute\n"}]},"apps":[],"jobName":"paragraph_1516117178062_-689512085","id":"20180116-153938_382756782","dateCreated":"2018-01-16T15:39:38+0000","dateStarted":"2018-01-19T12:08:48+0000","dateFinished":"2018-01-19T12:08:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24294"},{"text":"val tstfnComment = commentsArrDF.take(1)(0)\nval sentPosSet = sentPosNormForm.toSet\nval sentNegSet = sentNegNormForm.toSet\n\nval cntPos = SentiCount.wordsInSentiments(tstfnComment, sentPosSet)\nval cntNeg = SentiCount.wordsInSentiments(tstfnComment, sentNegSet)\nval cntWord = tstfnComment.length\nval cntNeutr = cntWord - (cntPos + cntNeg)\nprintln(\"Number of words \" + cntWord)\nprintln(\"Number of + words \" + cntPos)\nprintln(\"Number of - words \" + cntNeg)\nprintln(\"Number of 0 words \" + cntNeutr)","user":"anonymous","dateUpdated":"2018-01-19T12:07:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntstfnComment: Array[String] = Array(nieco, uzasne, vyklepky, staly, 9, kcs, 30, ks, teraz, dva, ta, cena, byt, vidiet, mama, dobre, bluznit, sudruh, birmovany, byt, nacisto, osprosteny)\nsentPosSet: scala.collection.immutable.Set[String] = Set(klasicky, pamatny, drahokam, vedenie, znak, ocenovat, zivit, vynikajuci, ovladat, vyhovujuci, autonomny, praca, renesancia, pravdivy, posobivy, asociativny, pocitit, obnovenie, modny, vedeny, uprimnost, nestranny, laskavy, doplnkovy, hrdinsky, vazny, podporujuci, cisto, posadnutost, zavazok, citlivy, raj, horlivy, zmiernit, harmonium, bezpochyby, odtlacok, nebesky, support, odporuceny, rurka, hladko, moderna, platit, doplnat, talentovany, ziara, konstruktivny, trend, dokonaly, pozitok, osvietenstvo, bohatost, lead, instrumentalny, win, zjednodusit, revival, tazky, povznesenie, svetly, lesknut, prestizny, mudro, veltrh, schopny, nadherny, zastanca, prisposobivy, opravneny, splnat, chciet, jasny, hlboko, pycha, obrodenie, fantazia, ...sentNegSet: scala.collection.immutable.Set[String] = Set(breaks, trest, predmet, lono, prisny, preruseny, chybat, explodovat, odrazit, kut, eliminacia, samovrazda, kostra, zlomit, vona, izolovat, nedostatok, zakazany, vyhnat, trhlina, ukradnut, beg, zrucanina, neposlusnost, opustit, prerusenie, zastrasit, dozadu, pohltit, choroba, zmateny, rue, neaktivny, tlmic, prenikat, porazeny, marit, nerozhodnost, nizky, prisera, nestaly, vytvoreny, nespolahlivy, ospravedlnenie, ulozit, potopeny, namietka, prenasledovanie, sporny, tazko, zmiesany, zarobit, duty, chybny, vypalenie, pristav, vladnut, povest, diskriminacia, nahrubo, poskodenie, krutost, trenie, vymysleny, hroziace, tresk, otrocit, vypovedat, blokada, prudko, zastavenie, hmla, nepacit, zraneny, tazky, opuch, kazat, patentovany, kos, pr...\ncntPos: Long = 2\n\ncntNeg: Long = 0\n\ncntWord: Int = 22\n\ncntNeutr: Long = 20\nNumber of words 22\nNumber of + words 2\nNumber of - words 0\nNumber of 0 words 20\n"}]},"apps":[],"jobName":"paragraph_1516119500094_1483907616","id":"20180116-161820_732904901","dateCreated":"2018-01-16T16:18:20+0000","dateStarted":"2018-01-19T12:08:48+0000","dateFinished":"2018-01-19T12:08:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24295"},{"text":"// Example: Usage of classes SentiCount & SentiCompute\nval sentPosSet = sentPosNormForm.toSet\nval sentNegSet = sentNegNormForm.toSet\n\nval tstfnComment = commentsArrDF.take(10).map{arr => \n    val cntPos = SentiCount.wordsInSentiments(arr, sentPosSet)\n    val cntNeg = SentiCount.wordsInSentiments(arr, sentNegSet)\n    val cntWord = arr.length\n    val S = SentiCountM(cntWord, cntNeg, cntPos)\n    println(S)\n    SentiCompute.sentiToProb(S)\n}\n","user":"anonymous","dateUpdated":"2018-01-19T12:07:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sentPosSet: scala.collection.immutable.Set[String] = Set(klasicky, pamatny, drahokam, vedenie, znak, ocenovat, zivit, vynikajuci, ovladat, vyhovujuci, autonomny, praca, renesancia, pravdivy, posobivy, asociativny, pocitit, obnovenie, modny, vedeny, uprimnost, nestranny, laskavy, doplnkovy, hrdinsky, vazny, podporujuci, cisto, posadnutost, zavazok, citlivy, raj, horlivy, zmiernit, harmonium, bezpochyby, odtlacok, nebesky, support, odporuceny, rurka, hladko, moderna, platit, doplnat, talentovany, ziara, konstruktivny, trend, dokonaly, pozitok, osvietenstvo, bohatost, lead, instrumentalny, win, zjednodusit, revival, tazky, povznesenie, svetly, lesknut, prestizny, mudro, veltrh, schopny, nadherny, zastanca, prisposobivy, opravneny, splnat, chciet, jasny, hlboko, pycha, obrodenie, fantazia, ...sentNegSet: scala.collection.immutable.Set[String] = Set(breaks, trest, predmet, lono, prisny, preruseny, chybat, explodovat, odrazit, kut, eliminacia, samovrazda, kostra, zlomit, vona, izolovat, nedostatok, zakazany, vyhnat, trhlina, ukradnut, beg, zrucanina, neposlusnost, opustit, prerusenie, zastrasit, dozadu, pohltit, choroba, zmateny, rue, neaktivny, tlmic, prenikat, porazeny, marit, nerozhodnost, nizky, prisera, nestaly, vytvoreny, nespolahlivy, ospravedlnenie, ulozit, potopeny, namietka, prenasledovanie, sporny, tazko, zmiesany, zarobit, duty, chybny, vypalenie, pristav, vladnut, povest, diskriminacia, nahrubo, poskodenie, krutost, trenie, vymysleny, hroziace, tresk, otrocit, vypovedat, blokada, prudko, zastavenie, hmla, nepacit, zraneny, tazky, opuch, kazat, patentovany, kos, pr...SentiCountM(22,0,2)\nSentiCountM(22,1,1)\nSentiCountM(9,2,2)\nSentiCountM(26,0,4)\nSentiCountM(9,1,1)\nSentiCountM(3,1,0)\nSentiCountM(1,0,0)\nSentiCountM(1,0,0)\nSentiCountM(1,0,0)\nSentiCountM(12,2,2)\n\ntstfnComment: Array[SentiProbM] = Array(SentiProbM(0.0,0.9090909090909091,0.09090909090909091), SentiProbM(0.045454545454545456,0.9090909090909091,0.045454545454545456), SentiProbM(0.2222222222222222,0.5555555555555556,0.2222222222222222), SentiProbM(0.0,0.8461538461538461,0.15384615384615385), SentiProbM(0.1111111111111111,0.7777777777777778,0.1111111111111111), SentiProbM(0.3333333333333333,0.6666666666666666,0.0), SentiProbM(0.0,1.0,0.0), SentiProbM(0.0,1.0,0.0), SentiProbM(0.0,1.0,0.0), SentiProbM(0.16666666666666666,0.6666666666666666,0.16666666666666666))\n"}]},"apps":[],"jobName":"paragraph_1516181467771_187901779","id":"20180117-093107_1101529747","dateCreated":"2018-01-17T09:31:07+0000","dateStarted":"2018-01-19T12:08:52+0000","dateFinished":"2018-01-19T12:08:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24297"},{"text":"val sentiComment = commentsArrDF.collect.toArray.map{arr => \n    val cntPos = SentiCount.wordsInSentiments(arr, sentPosSet)\n    val cntNeg = SentiCount.wordsInSentiments(arr, sentNegSet)\n    val cntWord = arr.length\n    val S = SentiCountM(cntWord, cntNeg, cntPos)\n    SentiCompute.sentiToProb(S)\n}","user":"anonymous","dateUpdated":"2018-01-19T12:07:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sentiComment: Array[SentiProbM] = Array(SentiProbM(0.0,0.9090909090909091,0.09090909090909091), SentiProbM(0.045454545454545456,0.9090909090909091,0.045454545454545456), SentiProbM(0.2222222222222222,0.5555555555555556,0.2222222222222222), SentiProbM(0.0,0.8461538461538461,0.15384615384615385), SentiProbM(0.1111111111111111,0.7777777777777778,0.1111111111111111), SentiProbM(0.3333333333333333,0.6666666666666666,0.0), SentiProbM(0.0,1.0,0.0), SentiProbM(0.0,1.0,0.0), SentiProbM(0.0,1.0,0.0), SentiProbM(0.16666666666666666,0.6666666666666666,0.16666666666666666), SentiProbM(0.0,1.0,0.0), SentiProbM(0.0,0.7857142857142857,0.21428571428571427), SentiProbM(0.16666666666666666,0.8333333333333334,0.0), SentiProbM(0.0,0.875,0.125), SentiProbM(0.2777777777777778,0.6111111111111112,0.111111111111..."}]},"apps":[],"jobName":"paragraph_1516183427550_1731150398","id":"20180117-100347_634447768","dateCreated":"2018-01-17T10:03:47+0000","dateStarted":"2018-01-19T12:08:53+0000","dateFinished":"2018-01-19T12:08:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24298"},{"text":"// Create index and zip comment lines with sentiment probabilities\ncase class SentiRow (comment: String, index: Long, negative: Double, neutral: Double, positive: Double )\nval commentsSenti = commentsDF.zipWithIndex.map{t =>\n    val line = t._1\n    val idx = t._2\n    val S: SentiProbM = sentiComment(idx.toInt)\n    SentiRow(line, idx, S.negative, S.neutral, S.positive)\n}\nval commentsSentiDF = commentsSenti.toDF\ncommentsSentiDF.show()","user":"anonymous","dateUpdated":"2018-01-19T12:10:33+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class SentiRow\n\ncommentsSenti: org.apache.spark.rdd.RDD[SentiRow] = MapPartitionsRDD[14] at map at <console>:82\n\ncommentsSentiDF: org.apache.spark.sql.DataFrame = [comment: string, index: bigint ... 3 more fields]\n+--------------------+-----+--------------------+------------------+--------------------+\n|             comment|index|            negative|           neutral|            positive|\n+--------------------+-----+--------------------+------------------+--------------------+\n|nieco uzasne vykl...|    0|                 0.0|0.9090909090909091| 0.09090909090909091|\n|byt zaujimavy cr ...|    1|0.045454545454545456|0.9090909090909091|0.045454545454545456|\n|naozaj pomaly vel...|    2|  0.2222222222222222|0.5555555555555556|  0.2222222222222222|\n|ano zvysovanie by...|    3|                 0.0|0.8461538461538461| 0.15384615384615385|\n|julius holz zauji...|    4|  0.1111111111111111|0.7777777777777778|  0.1111111111111111|\n|     konecna byt cas|    5|  0.3333333333333333|0.6666666666666666|                 0.0|\n|                null|    6|                 0.0|               1.0|                 0.0|\n|                null|    7|                 0.0|               1.0|                 0.0|\n|                   0|    8|                 0.0|               1.0|                 0.0|\n|jak kriz kriz sty...|    9| 0.16666666666666666|0.6666666666666666| 0.16666666666666666|\n|buda asi ta ochut...|   10|                 0.0|               1.0|                 0.0|\n|rychlo cena hora ...|   11|                 0.0|0.7857142857142857| 0.21428571428571427|\n|bola daky kriz je...|   12| 0.16666666666666666|0.8333333333333334|                 0.0|\n|nech ta vajce zoz...|   13|                 0.0|             0.875|               0.125|\n|kriz prosit vas m...|   14|  0.2777777777777778|0.6111111111111112|  0.1111111111111111|\n|cena nizky aky pr...|   15| 0.16666666666666666|0.5833333333333334|                0.25|\n|kriz skoncit mali...|   16| 0.13333333333333333|               0.8| 0.06666666666666667|\n|ja cena nejst neh...|   17|                 0.0|0.8571428571428571| 0.14285714285714285|\n|moct on obuchat h...|   18|                 0.0|0.9705882352941176|0.029411764705882353|\n|norsky svajciarsk...|   19|                 0.0|               1.0|                 0.0|\n+--------------------+-----+--------------------+------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1516278694360_358682837","id":"20180118-123134_2013857905","dateCreated":"2018-01-18T12:31:34+0000","dateStarted":"2018-01-19T12:10:33+0000","dateFinished":"2018-01-19T12:10:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24301"},{"text":"/* Save data to Parquet file */\nimport spark.implicits._\n\nval dir_data = \"data/dev-test-exploratory-analysis\"\nval f_sentdat = dir_data + \"/sentiment-prob.parquet\"\nprintln(\"Write sentiment probabilities to parquet file \" + f_sentdat)\nval sentiCommentParquet = sc.parallelize(sentiComment).toDF\nsentiCommentParquet.write.mode(\"overwrite\").parquet(f_sentdat)","user":"anonymous","dateUpdated":"2018-05-07T08:53:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport spark.implicits._\n\ndir_data: String = data/dev-test-exploratory-analysis\n\nf_sentdat: String = data/dev-test-exploratory-analysis/sentiment-prob.parquet\nWrite sentiment probabilities to parquet file data/dev-test-exploratory-analysis/sentiment-prob.parquet\n\nsentiCommentParquet: org.apache.spark.sql.DataFrame = [negative: double, neutral: double ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1516292523337_2058192740","id":"20180118-162203_461082780","dateCreated":"2018-01-18T16:22:03+0000","dateStarted":"2018-01-19T12:11:03+0000","dateFinished":"2018-01-19T12:11:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24306"},{"text":"sentiCommentParquet.describe(\"negative\", \"neutral\", \"positive\").show()","user":"anonymous","dateUpdated":"2018-01-19T12:11:08+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-------------------+-------------------+-------------------+\n|summary|           negative|            neutral|           positive|\n+-------+-------------------+-------------------+-------------------+\n|  count|               1015|               1015|               1015|\n|   mean|0.04824007631624003| 0.8661415027215451|0.08561842096221492|\n| stddev|0.09573055129669215|0.17441492363496486|0.12924100532277838|\n|    min|                0.0|               -1.0|                0.0|\n|    max|                1.0|                1.0|                1.0|\n+-------+-------------------+-------------------+-------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1516301011275_8706963","id":"20180118-184331_620637972","dateCreated":"2018-01-18T18:43:31+0000","dateStarted":"2018-01-19T12:11:08+0000","dateFinished":"2018-01-19T12:11:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24307"},{"text":"// Some errors.\nsentiCommentParquet.filter($\"neutral\" < 0.0).show()","user":"anonymous","dateUpdated":"2018-01-19T12:59:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+-------------------+------------------+\n|          negative|            neutral|          positive|\n+------------------+-------------------+------------------+\n|0.6666666666666666|-0.3333333333333333|0.6666666666666666|\n|               1.0|               -1.0|               1.0|\n+------------------+-------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1516365223391_1385178642","id":"20180119-123343_1887396139","dateCreated":"2018-01-19T12:33:43+0000","dateStarted":"2018-01-19T12:37:31+0000","dateFinished":"2018-01-19T12:37:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24308"},{"text":"// val arrQ = Array(0.01, 0.03, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.97, 0.99)\n// Q_0.25, 25% of all data is in quantil interval 0.25, (0.0, 0.25)\n// Q_0.5,  50% of all data is in quantil interval 0.5,  (0.0, 0.50)\n\nval arrQ = Array(0.25, 0.5, 0.75)\nprintln(\"Quantiles for negative sentiment words\")\nval qNeg = sentiCommentParquet.stat.approxQuantile(\"negative\",\n           arrQ ,0.0)\n\nprintln(\"Quantiles for neutral sentiment words\")\nval qNeu = sentiCommentParquet.stat.approxQuantile(\"neutral\",\n           arrQ ,0.0)\n           \nprintln(\"Quantiles for positive sentiment words\")           \nval qPos = sentiCommentParquet.stat.approxQuantile(\"positive\",\n           arrQ ,0.0)\n           \n\nval qZip = ((qNeg, qNeu, qPos).zipped.toArray zip arrQ) map { case ((av,bv,cv), dv) => (av,bv,cv,dv) }\n// (a, b, c).zipped.toList\nval qDF = sc.parallelize(qZip).toDF(\"negative\", \"neutral\", \"positive\", \"quantil\")\nqDF.show()","user":"anonymous","dateUpdated":"2018-01-19T13:17:01+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\narrQ: Array[Double] = Array(0.25, 0.5, 0.75)\nQuantiles for negative sentiment words\n\nqNeg: Array[Double] = Array(0.0, 0.0, 0.07692307692307693)\nQuantiles for neutral sentiment words\n\nqNeu: Array[Double] = Array(0.8, 0.9, 1.0)\nQuantiles for positive sentiment words\n\nqPos: Array[Double] = Array(0.0, 0.029411764705882353, 0.13333333333333333)\n\nqZip: Array[(Double, Double, Double, Double)] = Array((0.0,0.8,0.0,0.25), (0.0,0.9,0.029411764705882353,0.5), (0.07692307692307693,1.0,0.13333333333333333,0.75))\n\nqDF: org.apache.spark.sql.DataFrame = [negative: double, neutral: double ... 2 more fields]\n+-------------------+-------+--------------------+-------+\n|           negative|neutral|            positive|quantil|\n+-------------------+-------+--------------------+-------+\n|                0.0|    0.8|                 0.0|   0.25|\n|                0.0|    0.9|0.029411764705882353|    0.5|\n|0.07692307692307693|    1.0| 0.13333333333333333|   0.75|\n+-------------------+-------+--------------------+-------+\n\n"}]},"apps":[],"jobName":"paragraph_1516301194388_875590563","id":"20180118-184634_84320518","dateCreated":"2018-01-18T18:46:34+0000","dateStarted":"2018-01-19T13:08:49+0000","dateFinished":"2018-01-19T13:08:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:24310"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1516364400870_-1230712685","id":"20180119-122000_503708328","dateCreated":"2018-01-19T12:20:00+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:24311"}],"name":"2018W03.sentiment","id":"2D37NVCEX","angularObjects":{"2D415MKMA:shared_process":[],"2D418GU2G:shared_process":[],"2D3FDKVSA:shared_process":[],"2D4EF91UU:shared_process":[],"2D6HGQEPB:shared_process":[],"2D3U6JBXD:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}