{"paragraphs":[{"text":"println(\"Spark version \" + sc.version)\nprintln(\"Scala version \" + util.Properties.versionString)\n\n// Global variables\nval dir_data = \"data/dev-test-exploratory-analysis\"\nval fcomm_clean = dir_data + \"/224564804326967_facebook_comments_clean/part-*\"\n// End of Global variables\n\n// Read text file\nval commentsDF = sc.textFile(fcomm_clean)\n                    .filter(_.nonEmpty)\n                   .filter(l => !l.contains(\"null\"))\n                   .filter(l => !l.contains(\"0\"))\n                   \nval commentsArrDF = commentsDF\n                        .map(line => line.split(\" \"))\n                        .filter(s => s.length > 1)\n                        .toDF(\"words\")","user":"anonymous","dateUpdated":"2018-01-12T10:47:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Spark version 2.1.0\nScala version version 2.11.8\n\ndir_data: String = data/dev-test-exploratory-analysis\n\nfcomm_clean: String = data/dev-test-exploratory-analysis/224564804326967_facebook_comments_clean/part-*\n\ncommentsDF: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[190] at filter at <console>:82\n\ncommentsArrDF: org.apache.spark.sql.DataFrame = [words: array<string>]\n"}]},"apps":[],"jobName":"paragraph_1515678919654_1250912080","id":"20180111-135519_1419674687","dateCreated":"2018-01-11T13:55:19+0000","dateStarted":"2018-01-12T10:47:09+0000","dateFinished":"2018-01-12T10:47:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:26380"},{"text":"import org.apache.spark.ml.feature._\nimport org.apache.spark.ml.clustering.LDA\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.clustering.DistributedLDAModel\n\n// val commentsArrDF = commentsDF.map(line => line.split(\" \")).toDF(\"words\")\n\n\n\nval vectorizer = new CountVectorizer()\n  .setInputCol(\"words\")\n  .setOutputCol(\"features\")\n  .setVocabSize(3 * 2048)\n\nval numTopics = 10\n\nval lda = new LDA()\n  .setK(numTopics)\n  .setMaxIter(50)\n  .setOptimizer(\"em\")\n\nval pipeline = new Pipeline().setStages(Array(vectorizer, lda))\n\n// Save pipleines\npipeline.write.overwrite().save(dir_data + \"/lda/pipeline\")\n\n\n\nval pipelineModel = pipeline.fit(commentsArrDF)\n\nprintln(\"Stages \" + pipelineModel.stages)\n\nval vectorizerModel = pipelineModel.stages(0).asInstanceOf[CountVectorizerModel]\n// Since we trained with the default optimizer (EM), we get back a DistributedLDAModel\nval ldaModel = pipelineModel.stages(1).asInstanceOf[DistributedLDAModel]\n\n// Save Vectorizer Model\nvectorizerModel.write.overwrite().save(dir_data + \"/vectorizer/model\")\n\n// Let's save our LDA Model for later reuse.\nldaModel.write.overwrite().save(dir_data + \"/lda/model\")\n","user":"anonymous","dateUpdated":"2018-01-13T19:05:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.feature._\n\nimport org.apache.spark.ml.clustering.LDA\n\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.clustering.DistributedLDAModel\n\nvectorizer: org.apache.spark.ml.feature.CountVectorizer = cntVec_9cb728283195\n\nnumTopics: Int = 10\n\nlda: org.apache.spark.ml.clustering.LDA = lda_1ceba4b44d21\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_100407a7ebef\n\npipelineModel: org.apache.spark.ml.PipelineModel = pipeline_100407a7ebef\nStages [Lorg.apache.spark.ml.Transformer;@34aee95d\n\nvectorizerModel: org.apache.spark.ml.feature.CountVectorizerModel = cntVec_9cb728283195\n\nldaModel: org.apache.spark.ml.clustering.DistributedLDAModel = lda_1ceba4b44d21\n"}]},"apps":[],"jobName":"paragraph_1515678877309_-1497410610","id":"20180111-135437_1138511136","dateCreated":"2018-01-11T13:54:37+0000","dateStarted":"2018-01-13T19:05:35+0000","dateFinished":"2018-01-13T19:06:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26381"},{"text":"// Data log likelihood gives us a statistic for evaluation.\n// This statistics is always negative, and closer to 0 is better.\nldaModel.trainingLogLikelihood","user":"anonymous","dateUpdated":"2018-01-12T10:47:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres104: Double = -64499.561394447934\n"}]},"apps":[],"jobName":"paragraph_1515679003024_-1393727621","id":"20180111-135643_1596478213","dateCreated":"2018-01-11T13:56:43+0000","dateStarted":"2018-01-12T10:47:12+0000","dateFinished":"2018-01-12T10:47:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26382"},{"text":"ldaModel.describeTopics(maxTermsPerTopic = 5).show()","user":"anonymous","dateUpdated":"2018-01-12T10:47:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+------------------+--------------------+\n|topic|       termIndices|         termWeights|\n+-----+------------------+--------------------+\n|    0|  [0, 22, 7, 4, 2]|[0.08361479546064...|\n|    1| [0, 2, 24, 10, 4]|[0.09066305546892...|\n|    2|[3, 23, 25, 35, 0]|[0.04940099267992...|\n|    3| [0, 2, 4, 17, 27]|[0.07379670508899...|\n|    4|  [0, 4, 2, 33, 6]|[0.06444162366566...|\n|    5| [0, 6, 37, 4, 24]|[0.06869716963353...|\n|    6| [0, 2, 4, 26, 15]|[0.07036937965935...|\n|    7| [1, 8, 20, 0, 18]|[0.11087448945391...|\n|    8|[28, 0, 11, 5, 13]|[0.04025302995210...|\n|    9|  [0, 2, 5, 4, 14]|[0.06031717166363...|\n+-----+------------------+--------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1515679889842_1469076742","id":"20180111-141129_833621143","dateCreated":"2018-01-11T14:11:29+0000","dateStarted":"2018-01-12T10:47:43+0000","dateFinished":"2018-01-12T10:47:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26384"},{"text":"// Get vocab\nval vocabList = vectorizerModel.vocabulary\nval termsIdx2Str = udf { (termIndices: Seq[Int]) => termIndices.map(idx => vocabList(idx)) }\n","user":"anonymous","dateUpdated":"2018-01-12T10:47:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"vocabList: Array[String] = Array(byt, cena, on, ta, vajce, ja, lidl, kriz, vajicko, ani, kupit, este, vas, sty, letak, slovensky, ist, nebyt, vy, vsetok, buda, nemat, my, tam, boliet, clovek, u, dakovat, d, taky, chciet, ci, rad, iny, lebo, predajny, lidli, mama, toto, ktory, aky, slovensko, mata, dat, moct, to, nic, kupovat, ziaden, preco, nizky, tato, cela, dostat, vela, nevediet, prosit, akcia, malit, sliepka, obchod, draha, nas, bola, kto, asi, nemecky, super, vediet, 2, ona, no, stat, maslo, maj, 1, lacne, retazec, dobry, musiet, rakusky, trh, velmi, 3, v, potravina, photo, dol, pravda, vec, nechodit, vidiet, viest, rovnaky, ano, jeden, pot, vianoce, iba, robit, kde, zly, vobec, skoncit, cas, kazdy, doma, problem, rok, mysliet, konecna, hned, keby, sk, nakupovat, ponuka, dreveny, n...\ntermsIdx2Str: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,ArrayType(StringType,true),Some(List(ArrayType(IntegerType,false))))\n"}]},"apps":[],"jobName":"paragraph_1515679065280_247149817","id":"20180111-135745_996198536","dateCreated":"2018-01-11T13:57:45+0000","dateStarted":"2018-01-12T10:47:44+0000","dateFinished":"2018-01-12T10:47:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26385"},{"text":"// Show 5 terms from every topic.\ntermDF.show(51)\n","user":"anonymous","dateUpdated":"2018-05-07T09:00:50+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---------+--------------------+\n|topicId|     term|         probability|\n+-------+---------+--------------------+\n|      0|      byt| 0.08361479546064056|\n|      0|       my|0.020602385134036696|\n|      0|     kriz|0.017980691293512496|\n|      0|    vajce|0.012934938736808729|\n|      0|       on|0.010940927576253564|\n|      1|      byt| 0.09066305546892377|\n|      1|       on|0.019446990773016867|\n|      1|   boliet| 0.01289221039354366|\n|      1|    kupit| 0.01183571228356401|\n|      1|    vajce|0.010891887052878512|\n|      2|       ta|0.049400992679923976|\n|      2|      tam|0.031837084002934835|\n|      2|   clovek|0.026466936617004878|\n|      2| predajny| 0.02609561716295468|\n|      2|      byt|0.022926952503053176|\n|      3|      byt| 0.07379670508899845|\n|      3|       on|0.018043093957989146|\n|      3|    vajce|0.012077675529005181|\n|      3|    nebyt|0.011860982362548352|\n|      3|  dakovat|0.009355872045168207|\n|      4|      byt| 0.06444162366566192|\n|      4|    vajce|0.024087400462513023|\n|      4|       on|0.017345892855803336|\n|      4|      iny|0.010363822755497885|\n|      4|     lidl|0.010072316669551737|\n|      5|      byt| 0.06869716963353795|\n|      5|     lidl|0.032097006292988554|\n|      5|     mama| 0.02441565294256991|\n|      5|    vajce| 0.01854523746329452|\n|      5|   boliet|0.013819705159108596|\n|      6|      byt|  0.0703693796593543|\n|      6|       on|0.023691085328270113|\n|      6|    vajce|0.012169552667707757|\n|      6|        u|0.011202748810891753|\n|      6|slovensky|0.009717220318741867|\n|      7|     cena| 0.11087448945391011|\n|      7|  vajicko| 0.04366654958345922|\n|      7|     buda| 0.03015896091387578|\n|      7|      byt|0.025505137890753933|\n|      7|       vy| 0.02301149415116919|\n|      8|        d| 0.04025302995210583|\n|      8|      byt| 0.03696157046525404|\n|      8|     este|0.026605247871373663|\n|      8|       ja|0.025858232951204794|\n|      8|      sty|0.023926218685289366|\n|      9|      byt| 0.06031717166363496|\n|      9|       on| 0.02089676272925423|\n|      9|       ja|0.015296806115767957|\n|      9|    vajce|0.010878176810651112|\n|      9|    letak| 0.00983320718336385|\n+-------+---------+--------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1515679171096_1432481268","id":"20180111-135931_1084603234","dateCreated":"2018-01-11T13:59:31+0000","dateStarted":"2018-01-12T10:47:51+0000","dateFinished":"2018-01-12T10:47:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26389"},{"user":"anonymous","dateUpdated":"2018-01-12T10:47:10+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1515679306240_1895535054","id":"20180111-140146_1966076918","dateCreated":"2018-01-11T14:01:46+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:26392"}],"name":"20180111.lda-analysis","id":"2D3K82UN6","angularObjects":{"2D5R35WN5:shared_process":[],"2D4WJE3ZG:shared_process":[],"2D6AMX515:shared_process":[],"2D2QXTHMM:shared_process":[],"2D62Q2336:shared_process":[],"2D33BXRFX:shared_process":[],"2D5GNC57A:shared_process":[],"2D6EJ3T5F:shared_process":[],"2D4XG1CHA:shared_process":[],"2D3224CZD:shared_process":[],"2D375QX2U:shared_process":[],"2D3WQ8FE9:shared_process":[],"2D57GXNRZ:shared_process":[],"2D4SWEXV7:shared_process":[],"2D2QZMJXQ:shared_process":[],"2D6B4AMQG:shared_process":[],"2D5J6P31S:shared_process":[],"2D3MGFQVC:shared_process":[],"2D3VY7NPE:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}
